#! /usr/bin/env raku

unit sub MAIN (Int $n where 10 <= $n <= 1000, :u(:$upto), :v(:$verbose));

$upto
  ?? (10 .. $n).map({ say "$_ -> { + is-lychrel($_) }" })
  !! say + is-lychrel($n);

sub is-lychrel ($current is copy)
{
  my $i = 0;
  
  loop
  {
    my $flipped =  $current.flip;
    say ": $current + $flipped = { $current + $flipped }" if $verbose;
    $current = $current + $current.flip;

    return False if $current == $current.flip;

    return True if $i++ == 500 || $current >= 10_000_000;
  } 
}
