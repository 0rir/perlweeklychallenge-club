TASK #1 - Abecedarian Words

An abecedarian word is a word whose letters are arranged in alphabetical
order. For example, 'knotty' is an abecedarian word, but 'knots'
is not. Output or return a list of all abecedarian words in the
dictionary, sorted in decreasing order of length.

Optionally, using only abecedarian words, leave a short comment in your code to make your reviewer smile.

MY NOTES: ok.  Pretty easy.

GUEST LANGUAGE: As a bonus, I also had a go at translating ch-1.pl into C,
look in the C directory for that.


TASK #2 - Pangrams

A pangram is a sentence or phrase that uses every letter in the English
alphabet at least once. For example, perhaps the most well known
pangram is:

the quick brown fox jumps over the lazy dog

Using the provided dictionary, so that you don't need to include
individual copy, generate at least one pangram.

Your pangram does not have to be a syntactically valid English sentence
(doing so would require far more work, and a dictionary of nouns, verbs,
adjectives, adverbs, and conjunctions). Also note that repeated letters,
and even repeated words, are permitted.

BONUS: Constrain or optimize for something interesting (completely up
to you), such as:

Shortest possible pangram (difficult)

Pangram which contains only abecedarian words (see challenge 1)

Pangram such that each word "solves" exactly one new letter. For example,
such a pangram might begin with (newly solved letters in bold):
    a ah hi hid die ice tea ...

    (What is the longest possible pangram generated with this method? All
    solutions will contain 26 words, so focus on the letter count.)

Pangrams that have the weirdest (PG-13) Google image search results

Anything interesting goes!


MY NOTES: hmmm.  Pretty easy to find a pangram in a brute force fashion,
but anything more constrained sounds pretty hard.
