function check_squares(p)
    ∑ = p[1] + p[2]
    return (p[2] + p[3] + p[4] == ∑ &&
        p[4] + p[5] + p[6] == ∑ &&
        p[6] + p[7] == ∑)
end

function permute(k, in)  # Heap's algorithm
    if (k == 1)
        if (check_squares(in)) println(in) end
        # println(in)
    else
        permute(k - 1, in)
        for i = 1:(k-1)
            if (k % 2 == 0)
                in[i], in[k] = in[k], in[i]
            else
                in[1], in[k] = in[k], in[1]
            end
            permute(k - 1, in)
        end
    end
end

permute(7, [1, 2, 3, 4, 5, 6, 7])
