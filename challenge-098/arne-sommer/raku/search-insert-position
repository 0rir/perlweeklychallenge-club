#! /usr/bin/env raku

unit sub MAIN (*@N where (@N.elems && all(@N) ~~ Int && [<] @N),
               Int :$N,
	       :v(:$verbose)
	      );

my $end = @N.end;

my $delta = ($end/2).round;
my $try   = $delta;

loop
{
  say ": try at $try" if $verbose;

  if $try == 0 && $N < @N[0]
  {
    say 0;
    last;
  }
  elsif $try == $end && $N > @N[$end]
  {
    say $end +1;
    last;
  }
  
  if @N[$try] == $N
  {
    say $try;
    last;
  }
  elsif @N[$try] < $N && @N[$try+1] > $N
  {
    say $try +1;
    last;
  }

  $delta = ($delta/2).round;

  if @N[$try] < $N
  {
    $try += $delta;
  }
  elsif @N[$try] > $N
  {
    $try -= $delta;
  }
}
