#! /usr/bin/env raku

unit sub MAIN (Int $N where $N > 0, :v(:$verbose));

my $lower = 1 ~ 0 x ($N -1);
my $upper = 9 x $N;

say ": Range: $lower - $upper" if $verbose;

say ($lower .. $upper).grep({ is-rare($_) }).join("\n");

sub is-rare ($number)
{
  my $reverse  = $number.flip.Int;

  my $add      = $number + $reverse;
  return False if $add < 0;

  my $subtract = $number - $reverse;
  return False if $subtract < 0;

  my $add-sqrt = $add.sqrt;

  if $add-sqrt.Int == $add-sqrt
  { 
    my $sub-sqrt = $subtract.sqrt;
    return $sub-sqrt.Int == $sub-sqrt;
  }
}