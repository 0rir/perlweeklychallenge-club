#
# See ../README.md
#

#
# Run as: bc ch-2.bc < input-file
#

base = 10

define digit_sum (m) {
    auto sum
    sum = 0
    while (m > 0) {
        sum = sum + (m % base)
        m   =       (m / base)
    }
    return (sum)
}

small_primes [ 0] =  2
small_primes [ 1] =  3
small_primes [ 2] =  5
small_primes [ 3] =  7
small_primes [ 4] = 11
small_primes [ 5] = 13
small_primes [ 6] = 17
small_primes [ 7] = 19
small_primes [ 8] = 23
small_primes [ 9] = 29
small_primes [10] = 31

count = 10

n = 0
while (count > 0) {
    n   = n + 1
    sum = 0
    fc  = 0
    r   = n
    for (d = 0; d < 11 && n > 1; d ++) {
        prime = small_primes [d]
        while (r % prime == 0) {
            sum = sum + digit_sum (prime)
            fc  = fc  + 1
            r   = r / prime
        }
    }
    if (r > 1) {
        sum = sum + digit_sum (r)
        fc  = fc  + 1
    }
    if (fc > 1 && sum == digit_sum (n)) {
        n
        count = count - 1
    }
}

halt
