Task 1: Damm Algorithm

You are given a positive number, $n.

Write a script to validate the given number against the included check digit.

Please checkout the wikipedia page
	https://en.wikipedia.org/wiki/Damm_algorithm
for more information.

Example 1

	Input: $n = 5724
	Output: 1 as it is valid number

Example 2

	Input: $n = 5727
	Output: 0 as it is invalid number

MY NOTES: ok, sounds pretty easy.  The Damn algorithm uses a specific
10x10 matrix, and a very simple validation algorithm (and the check
digit validation algorithm is almost identical to the validation algorithm)

GUEST LANGUAGE: As a bonus, I also had a go at translating ch-1.pl
into C (look in the C directory for that).


Task 2: Palindromic Prime Cyclops

Write a script to generate first 20 Palindromic Prime Cyclops Numbers.

A cyclops number is a number with an odd number of digits that has a
zero in the center only.

Output

101, 16061, 31013, 35053, 38083, 73037, 74047, 91019, 94049,
1120211, 1150511, 1160611, 1180811, 1190911, 1250521, 1280821,
1360631, 1390931, 1490941, 1520251


MY NOTES: This seems pretty easy.  Find numbers that are
a). cyclops numbers and
b). prime numbers and
c). palindromic numbers
(although, as the late great Eric Morecambe would say: but not
necessarily in that order).

- Obvious way to generate palindromic cyclops numbers is to append
  x + 0 + rev(x)
  for each small integer x = 1, 2...
- and then test each such number for primality
- extracted isprime() function from my solution to challenge 156 task 1,
  and put it in it's own IsPrime module.

GUEST LANGUAGE: As a bonus, I also had a go at translating ch-2.pl
into C (look in the C directory for that).
