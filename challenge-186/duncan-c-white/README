Task 1: Zip List

You are given two list @a and @b of same size.
Create a subroutine sub zip(@a, @b) that merge the two list as shown in
the example below.

Example

Input:  @a = qw/1 2 3/; @b = qw/a b c/;
Output: zip(@a, @b) should return qw/1 a 2 b 3 c/;
        zip(@b, @a) should return qw/a 1 b 2 c 3/;


MY NOTES: very easy, except for the fact that a Perl subroutine CAN'T
take 2 arrays.  Guess he meant array-refs?

GUEST LANGUAGE: As a bonus, I also had a go at translating ch-1.pl
into C (look in the C directory for that).  Of course, that could
only deal with lists of integers, so the examples above have to change.


Task 2: Unicode Makeover

You are given a string with possible unicode characters.
Create a subroutine sub makeover($str) that replace the unicode characters with ascii equivalent. For this task, let us assume it only contains alphabets.

Example 1

Input: $str = 'ÃÊÍÒÙ';
Output: 'AEIOU'

Example 2

Input: $str = 'âÊíÒÙ';
Output: 'aEiOU'


MY NOTES: Unicode: just say no - hell no.
My terminal doesn't even display the horrible input strings right.
I'm not doing this.  Forget it.
